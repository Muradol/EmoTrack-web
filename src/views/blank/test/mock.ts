import Mock from 'mockjs';
import qs from 'query-string';
import setupMock, { successResponseWrap } from '@/utils/setup-mock';
import { GetParams } from '@/types/global';
// 姓氏池
const surnamePool = [
  '张',
  '李',
  '王',
  '刘',
  '陈',
  '杨',
  '赵',
  '黄',
  '周',
  '吴',
  '郭',
  '孙',
  '马',
  '朱',
  '胡',
  '林',
  '何',
  '高',
  '罗',
  '郑',
  '梁',
  '谢',
  '宋',
  '唐',
  '许',
  '韩',
  '冯',
  '邓',
  '曹',
  '彭',
  '曾',
  '肖',
  '田',
  '董',
  '袁',
  '潘',
  '于',
  '蒋',
  '蔡',
  '余',
  '杜',
  '叶',
  '程',
  '苏',
  '魏',
  '吕',
  '丁',
  '任',
  '沈',
  '姚',
  '卢',
  '姜',
  '崔',
  '钟',
  '谭',
  '陆',
  '汪',
  '范',
  '金',
  '石',
  '廖',
  '贾',
  '夏',
  '韦',
  '付',
  '方',
  '白',
  '邹',
  '孟',
  '熊',
  '秦',
  '邱',
  '江',
  '尹',
  '薛',
  '闫',
  '段',
  '雷',
  '侯',
  '龙',
  '史',
  '陶',
  '黎',
  '贺',
  '顾',
  '毛',
  '郝',
  '龚',
  '邵',
  '万',
  '钱',
  '严',
  '覃',
  '武',
  '戴',
  '莫',
  '孔',
  '向',
  '汤',
];
// 名字池
const namePool = [
  '伟',
  '芳',
  '娜',
  '敏',
  '静',
  '秀英',
  '丽',
  '强',
  '磊',
  '军',
  '洋',
  '勇',
  '艳',
  '杰',
  '娟',
  '涛',
  '超',
  '明',
  '霞',
  '秀兰',
  '平',
  '刚',
  '桂英',
  '丹',
  '萍',
  '鹏',
  '华',
  '红',
  '玲',
  '国强',
  '倩',
  '健',
  '俊',
  '帆',
  '雪',
  '帅',
  '晨',
  '旭',
  '宇',
  '浩',
  '凯',
  '秀珍',
  '坤',
  '婷',
  '文',
  '荣',
  '佳',
  '欢',
  '琴',
  '瑞',
  '凤',
  '欣',
  '雷',
  '宁',
  '琳',
  '洁',
  '健',
  '亮',
  '峰',
  '建',
  '云',
  '洪',
  '飞',
  '燕',
  '涵',
  '洲',
  '瑜',
  '轩',
  '露',
  '琪',
  '哲',
  '凌',
  '菲',
  '浩',
  '皓',
  '鑫',
  '锋',
  '彬',
  '钰',
  '昊',
  '韵',
  '璐',
  '泽',
  '悦',
  '璇',
  '靖',
  '瑶',
  '熙',
  '鸣',
  '诗',
  '婧',
  '霄',
  '琦',
  '晗',
  '蕾',
  '梓',
  '辰',
  '胤',
  '祺',
  '煜',
  '昱',
  '骏',
  '晟',
  '宸',
  '睿',
  '沣',
  '炀',
  '楠',
  '佑',
  '铖',
  '烨',
  '煊',
  '皓轩',
  '擎',
  '烜',
  '瑾',
  '瑜',
  '鹏煊',
  '烨磊',
  '烨霖',
  '煜城',
  '烨伟',
  '睿嘉',
  '煜祺',
  '烨华',
  '煜辰',
  '煊泽',
  '烨烁',
  '烨煜',
  '明辰',
  '伟诚',
  '明轩',
  '健柏',
  '明杰',
  '立诚',
  '立轩',
  '立辰',
  '峻熙',
  '弘文',
  '熠彤',
  '鸿煊',
  '炎彬',
  '鹏煊',
  '磊磊',
  '天佑',
  '伟宸',
  '博超',
  '君浩',
  '子骞',
  '明辰',
  '鹏涛',
  '炎彬',
  '鹤轩',
  '越彬',
  '风华',
  '靖琪',
  '明诚',
  '高格',
  '光华',
  '国源',
  '冠宇',
  '晗昱',
  '涵润',
  '翰飞',
  '翰海',
  '昊强',
  '昊天',
  '昊宇',
  '昊英',
  '浩波',
  '浩博',
  '浩初',
  '浩宕',
  '浩歌',
  '浩广',
  '浩然',
  '皓轩',
  '和蔼',
  '和安',
  '和璧',
  '和昶',
  '和畅',
  '和风',
  '和歌',
  '和光',
  '和平',
  '和洽',
  '和惬',
  '和顺',
  '和硕',
  '和颂',
  '和泰',
  '和通',
  '和同',
  '和雅',
  '和宜',
  '和玉',
  '和裕',
  '和豫',
  '和悦',
  '和韵',
  '和泽',
  '和正',
  '和志',
  '弘博',
  '弘大',
  '弘方',
  '弘光',
  '弘和',
  '弘厚',
  '弘化',
  '弘济',
  '弘阔',
  '弘亮',
  '弘量',
  '弘深',
  '弘盛',
  '弘图',
  '弘伟',
  '弘新',
  '弘雅',
  '弘扬',
  '弘业',
  '弘义',
  '弘艺',
  '弘易',
  '弘毅',
  '弘懿',
  '弘致',
  '弘壮',
  '宏伯',
  '宏博',
  '宏才',
  '宏畅',
  '宏达',
  '宏大',
  '宏放',
  '宏富',
  '宏峻',
  '宏浚',
  '宏恺',
  '宏旷',
  '宏阔',
  '宏朗',
  '宏茂',
  '宏邈',
  '宏儒',
  '宏深',
  '宏胜',
  '宏盛',
  '宏爽',
  '宏硕',
  '宏伟',
  '宏扬',
  '宏义',
  '宏逸',
  '宏毅',
  '宏远',
  '宏壮',
  '鸿宝',
  '鸿波',
  '鸿博',
  '鸿才',
  '鸿畅',
  '鸿畴',
  '鸿达',
  '鸿德',
  '鸿飞',
  '鸿风',
  '鸿福',
  '鸿光',
  '鸿晖',
  '鸿朗',
  '鸿文',
  '鸿熙',
  '鸿羲',
  '鸿禧',
  '鸿信',
  '鸿轩',
  '鸿雪',
  '鸿羽',
  '鸿远',
  '鸿云',
  '鸿哲',
  '鸿祯',
  '鸿志',
  '鸿卓',
  '嘉澍',
  '光赫',
  '光华',
  '光辉',
  '光济',
  '光亮',
  '光临',
  '光明',
  '光启',
  '光熙',
  '光耀',
  '光誉',
  '光远',
  '国安',
  '国兴',
  '国源',
  '冠宇',
  '冠玉',
  '军',
];
const { Random } = Mock;
const departmentNames = [
  '技术部',
  '策划部',
  '宣传部',
  '行政部',
  '开发部',
  '产品部',
  '设计部',
  '财务部',
  '人力资源部',
  '销售部',
  '市场部',
  '客户服务部',
  '采购部',
  '物流部',
  '研发部',
  '运营部',
  '法务部',
  '公关部',
  'IT部',
  '安全部',
];
const data = Mock.mock({
  'list|55': [
    {
      'id|8': /[0-9]/,
      'name': () => Random.pick(surnamePool) + Random.pick(namePool),
      'contentType|1': ['blue', 'happy', 'sad'],
      'phoneNumber': () =>
        Number(['1'] + Random.pick([3, 5, 8, 7]) + Random.string('number', 9)),
      'gender|1': [0, 1],
      'birthday': () => {
        let date = Random.date('yyyy-MM-dd');
        while (new Date(date) > new Date('2003-12-31')) {
          date = Random.date('yyyy-MM-dd');
        }
        return date;
      },
      'departmentName': () => Random.pick(departmentNames),
      'role|1': ['员工', '主管', '经理', '总监'],
      'departmentNo|1': /[0-5]/,
    },
  ],
});

setupMock({
  setup() {
    Mock.mock(new RegExp('/api/list/employee'), (params: GetParams) => {
      const { current = 1, pageSize = 10 } = qs.parseUrl(params.url).query;
      const p = current as number;
      const ps = pageSize as number;
      return successResponseWrap({
        list: data.list.slice((p - 1) * ps, p * ps),
        total: 55,
      });
    });
  },
});
